{"version":3,"sources":["components/Header.js","components/Footer.js","components/Scroll.js","components/PhotoCard.js","containers/App.js","serviceWorker.js","index.js"],"names":["Header","className","role","aria-label","Footer","id","href","Scroll","props","style","overflowY","border","height","children","PhotoCard","srcPath","farm","server","secret","alt","src","App","useState","pictures","setPictures","isLoaded","setIsLoaded","error","setError","inputText","setInputText","wordsToSearch","setWordsToSearch","useEffect","fetch","method","then","response","json","data","photos","photo","message","onChange","event","text","target","value","type","placeholder","onKeyDown","keyCode","onClick","map","pic","index","key","number","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"6PAiBeA,MAbf,WACI,OACI,yBAAKC,UAAU,2BACX,wBAAIA,UAAU,qBACd,0BAAMC,KAAK,MAAMC,aAAW,UAA5B,gBADA,iBAC4D,0BAAMA,aAAW,eAAeD,KAAK,OAArC,iBAC5D,uBAAGD,UAAU,UAAb,4CCcGG,MAnBf,WACI,OACI,4BAAQH,UAAU,SAASI,GAAG,kBAE9B,yBAAKJ,UAAU,SAEX,uBAAGK,KAAK,oCAAmC,uBAAGL,UAAU,gCAExD,uBAAGK,KAAK,+CAA8C,uBAAGL,UAAU,iCAEnE,uBAAGK,KAAK,oCAAmC,uBAAGL,UAAU,+BAE1D,4DCLKM,EARA,SAACC,GACd,OACE,yBAAKP,UAAU,eAAcQ,MAAQ,CAACC,UAAW,SAAUC,OAAQ,oBAAqBC,OAAQ,UAC7FJ,EAAMK,WCSEC,EAXG,SAACN,GAEjB,IAAMO,EAAS,eAAgBP,EAAMQ,KAAO,qBAAsBR,EAAMS,OAAS,IAAKT,EAAMH,GAAI,IAAKG,EAAMU,OAAQ,SACnH,OACE,yBAAKjB,UAAU,IACb,yBAAKA,UAAU,cAAckB,IAAI,eAAeC,IAAKL,MCmF5CM,MAnFf,WAAgB,IAAD,EAEkBC,mBAAS,IAF3B,mBAENC,EAFM,KAEIC,EAFJ,OAGmBF,oBAAS,GAH5B,mBAGNG,EAHM,KAGIC,EAHJ,OAIWJ,mBAAS,IAJpB,mBAINK,EAJM,KAICC,EAJD,OAKqBN,mBAAS,IAL9B,mBAKNO,EALM,KAKKC,EALL,OAM6BR,mBAAS,UANtC,mBAMNS,EANM,KAMSC,EANT,KAsCb,OA9BAC,qBAAU,WACRC,MAAM,mHAAuHH,EAAc,gFAAgF,CAACI,OAAO,QAClOC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACHb,GAAY,GACZF,EAAYe,EAAKC,OAAOC,UACvB,SAACd,GACED,GAAY,GACZE,EAASD,QAGd,CAACI,IAmBFJ,EACQ,uCAAaA,EAAMe,SACjBjB,EAIJ,yBAAKxB,UAAU,MACb,yBAAKA,UAAU,MACT,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACb,2BACEA,UAAU,8CACV0C,SA5BtB,SAAsBC,GACpB,IAAMC,EAAMD,EAAME,OAAOC,MACzBjB,EAAae,IA2BOG,KAAK,OACLC,YAAY,YACZF,MAAOlB,EACPqB,UAvBtB,SAAqBN,GACE,KAAhBA,EAAMO,SACPnB,EAAiBH,MAwBH,4BACE5B,UAAU,+DACVmD,QAhCtB,WACEpB,EAAiBH,KA6BC,WAKF,kBAAC,EAAD,KACCN,EAAS8B,KAAI,SAACC,EAAKC,GAChB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLE,OAAQF,EACRlD,GAAIiD,EAAIjD,GACRW,KAAMsC,EAAItC,KACVC,OAAQqC,EAAIrC,OACZC,OAAQoC,EAAIpC,aAIpB,kBAAC,EAAD,QAlCP,4CCtCOwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlC,MAAK,SAAAmC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9C,GACL+C,QAAQ/C,MAAMA,EAAMe,c","file":"static/js/main.26002def.chunk.js","sourcesContent":["//jshint esversion:6\r\n\r\nimport React from \"react\";\r\n\r\nfunction Header () {\r\n    return (\r\n        <div className=\"header-title pa3 pa3-ns\">\r\n            <h1 className=\"f1-m f-headline-1\">\r\n            <span role=\"img\" aria-label=\"camera\">ðŸ“·</span> Photo Search <span aria-label=\"camera-flash\" role=\"img\">ðŸ“¸</span></h1>\r\n            <p className=\"fw1 f3\">Search below, see what you can find...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header;","//jshint esversion:6\r\n\r\nimport React from \"react\"\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer className=\"footer\" id=\"footer-contact\">\r\n\r\n        <div className=\"links\">\r\n          \r\n            <a href=\"https://twitter.com/vince_webdev\"><i className=\"footer-icon fab fa-twitter\"></i></a>\r\n            \r\n            <a href=\"https://www.linkedin.com/in/vince-caldwell/\"><i className=\"footer-icon fab fa-linkedin\"></i></a>\r\n            \r\n            <a href=\"https://github.com/vincecaldwell\"><i className=\"footer-icon fab fa-github\"></i></a> \r\n    \r\n          <p>Created by: Vince Caldwell</p>\r\n    \r\n        </div>\r\n    </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","//jshint esversion:6\r\nimport React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div className=\"scroll-field\"style={ {overflowY: 'scroll', border: '2px solid #0984e3', height: '600px' } }>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","//jshint esversion:6\r\n\r\nimport React from 'react';\r\n\r\nconst PhotoCard = (props) => {\r\n\r\n  const srcPath= \"https://farm\"+ props.farm + \".staticflickr.com/\"+ props.server + \"/\"+ props.id +\"_\"+ props.secret +\"_c.jpg\";\r\n  return(\r\n    <div className=\"\">\r\n      <img className=\"mw-100 grow\" alt=\"Did not show\" src={srcPath}></img>\r\n      {/* <p>{props.number}</p> */}\r\n    </div>           \r\n  );\r\n}\r\n\r\nexport default PhotoCard;\r\n\r\n\r\n","//jshint esversion:6\r\nimport React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport Header from \"../components/Header.js\";\r\nimport Footer from '../components/Footer';\r\nimport Scroll from '../components/Scroll';\r\nimport PhotoCard from '../components/PhotoCard';\r\n\r\n\r\nfunction App() {\r\n  \r\n  const [pictures, setPictures] =useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError]=useState(\"\");\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [wordsToSearch, setWordsToSearch] = useState(\"apples\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=\"+process.env.REACT_APP_FLICKR_KEY+\"&tags=\"+wordsToSearch+\"&safe_search=1&content_type=1&per_page=25&page=1&format=json&nojsoncallback=1\",{method:\"GET\"})\r\n    .then(response => response.json())\r\n    .then((data) => {\r\n        setIsLoaded(true);\r\n        setPictures(data.photos.photo);\r\n      }, (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n      );\r\n    }, [wordsToSearch]);\r\n\r\n\r\n  function handleChange(event){\r\n    const text= event.target.value;\r\n    setInputText(text);\r\n  }\r\n\r\n  function submitSearch () {\r\n    setWordsToSearch(inputText);\r\n  }\r\n\r\n  function handleEnter(event) {\r\n      if(event.keyCode===13){\r\n        setWordsToSearch(inputText);\r\n      }\r\n  }\r\n\r\n  \r\n  if (error) {\r\n      return (<div>Error: {error.message}</div>);\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n        return(\r\n            <div className=\"tc\">\r\n              <div className=\"f2\">\r\n                    <Header />\r\n                    <div className=\"search-bar\">\r\n                      <input\r\n                        className=\"input-reset ba b--black-20 pa3 mb2 db w-100\" \r\n                        onChange={handleChange}\r\n                        type=\"text\" \r\n                        placeholder=\"Type here\"\r\n                        value={inputText}\r\n                        onKeyDown={handleEnter}\r\n                      >\r\n                      </input>\r\n                      <button\r\n                        className=\"f4 link dim br-pill ph3 pv2 mb2 dib white bg-near-black grab\" \r\n                        onClick={submitSearch}>Search\r\n                      </button>\r\n                    </div>\r\n                    <Scroll>\r\n                    {pictures.map((pic, index) => {\r\n                        return(\r\n                          <PhotoCard \r\n                            key={index}\r\n                            number={index}\r\n                            id={pic.id}\r\n                            farm={pic.farm}\r\n                            server={pic.server}\r\n                            secret={pic.secret}\r\n                          />\r\n                        )})}\r\n                    </Scroll>\r\n                    <Footer />\r\n              </div>\r\n            </div>\r\n          );\r\n      }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","//jshint esversion:6\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}